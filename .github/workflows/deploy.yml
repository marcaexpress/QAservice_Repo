name: Deploy to Vercel

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  migrate-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd apps/web
          npm ci

      - name: Generate Tailwind CSS
        run: |
          cd apps/web
          npm run prebuild

      - name: Verify CSS generation
        run: |
          cd apps/web
          if [ ! -f "public/_tw.css" ]; then
            echo "❌ Error: CSS no se generó"
            exit 1
          fi
          echo "✅ CSS generado: $(ls -lh public/_tw.css)"
      
        - name: Baseline DB schema (init.sql)
          env:
            DATABASE_URL: ${{ secrets.DATABASE_URL_PRODUCTION }}
          run: |
            echo "🗄️ Ejecutando baseline init.sql en la base de datos..."
            psql "$DATABASE_URL" -f prisma/init.sql
            echo "✅ Baseline aplicado"

      - name: Generate Prisma client
        run: |
          cd apps/web
          npx prisma generate --schema=../../prisma/schema.prisma

      - name: Run Prisma migrations on remote DB
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_PRODUCTION }}
        run: |
          echo "🚀 Ejecutando migraciones Prisma en la base de datos remota..."
          cd apps/web
          npx prisma migrate deploy --schema=../../prisma/schema.prisma
          echo "✅ Migraciones completadas"

      - name: Sync metadata (componentes y páginas)
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_PRODUCTION }}
        run: |
          echo "🔄 Sincronizando metadata desde JSON..."
          npx ts-node scripts/sync-metadata.ts
          echo "✅ Metadata sincronizada"

      - name: Run tests
        run: |
          echo "🚦 Ejecutando tests automáticos..."
          cd apps/web
          npm test

      - name: Build application
        run: |
          cd apps/web
          npm run build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./apps/web
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Healthcheck post-deploy
        run: |
          echo "🔎 Realizando healthcheck post-deploy..."
          sleep 20
          node -e "require('https').get('https://qa-services-d849kxe3s-marcaexpress-projects.vercel.app/api/health', res => { if(res.statusCode !== 200) { console.error('❌ Healthcheck fallido'); process.exit(1); } else { console.log('✅ Healthcheck OK'); } }).on('error', e => { console.error('❌ Healthcheck fallido'); process.exit(1); });"
